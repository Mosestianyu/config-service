    # 数据库访问配置
    # 主数据源，默认的
    spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
    spring.datasource.url=jdbc:mysql://39.107.111.89:3306/zhongyu_security?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
    spring.datasource.username=root
    spring.datasource.password=Tianziyi19901025
    spring.datasource.driverClassName = com.mysql.jdbc.Driver


    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    spring.datasource.initialSize=5
    spring.datasource.minIdle=5
    spring.datasource.maxActive=20
    # 配置获取连接等待超时的时间
    spring.datasource.maxWait=60000
   	# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    spring.datasource.timeBetweenEvictionRunsMillis=60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    spring.datasource.minEvictableIdleTimeMillis=300000
    spring.datasource.validationQuery=SELECT 1 FROM DUAL
    spring.datasource.testWhileIdle=true
    spring.datasource.testOnBorrow=false
    spring.datasource.testOnReturn=false
    # 打开PSCache，并且指定每个连接上PSCache的大小  
    spring.datasource.poolPreparedStatements=true
    spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
    spring.datasource.filters=stat,wall
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
   # 合并多个DruidDataSource的监控数据
    spring.datasource.useGlobalDataSourceStat=true


    #JPA Configuration:  
    spring.jpa.database=MYSQL
    # Show or not log for each sql query
    spring.jpa.show-sql=false
    spring.jpa.generate-ddl=true 
    # 自动建表方式 
    # Hibernate ddl auto (create, create-drop, update)
    # spring.jpa.hibernate.ddl-auto=create
    ## 建表方式
	spring.jpa.properties.hibernate.hbm2ddl.auto=update 
    #spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect  
    spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy  
    #spring.jpa.database=org.hibernate.dialect.MySQL5InnoDBDialect 
    spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

#	server.port=8761
#
#	eureka.instance.hostname=localhost
#	#feign.hystrix.enabled=true
#	#ribbon.IsSecure=true
#	
#	#表示是否将自己注册到Eureka Server，默认为true。由于当前这个应用就是Eureka Server，故而设为false
#	eureka.client.registerWithEureka=false
#	#表示是否从Eureka Server获取注册信息，默认为true。因为这是一个单点的Eureka Server，不需要同步其他的Eureka Server节点的数据，故而设为false。 
#	eureka.client.fetchRegistry=false
#	#暴露server地址
#	eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/

	application.properties
	spring.application.name=zygj
	server.port=8012
	eureka.client.fetchRegistry=true
	eureka.client.serviceUrl.defaultZone=http://172.17.128.192:8761/eureka/
	
#    spring.mvc.view.prefix=/WEB-INF/
#	spring.mvc.view.suffix=.jsp
	spring.mvc.view.prefix=classpath:/templates/
	spring.mvc.view.suffix=.html
#    spring.resources.static-locations=classpath:/resources/,classpath:/templates/,classpath:/static/